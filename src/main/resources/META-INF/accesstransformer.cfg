# These allow us to override a few specific methods in IcebergFeature
# This is the best way to avoid copy-pasting the entire class, or trying to mixin and change very specific behavior
# The first two are overridden, the next three are called from these overridden functions
public net.minecraft.world.level.levelgen.feature.IcebergFeature m_66035_(IILnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelAccessor;ZDLnet/minecraft/core/BlockPos;II)V # carve
public net.minecraft.world.level.levelgen.feature.IcebergFeature m_66085_(Lnet/minecraft/core/BlockPos;Lnet/minecraft/world/level/LevelAccessor;Ljava/util/Random;IIZZLnet/minecraft/world/level/block/state/BlockState;)V # setIcebergBlock

public net.minecraft.world.level.levelgen.feature.IcebergFeature m_66022_(IILnet/minecraft/core/BlockPos;IID)D # signedDistanceEllipse
public net.minecraft.world.level.levelgen.feature.IcebergFeature m_159885_(Lnet/minecraft/world/level/block/state/BlockState;)Z # isIcebergState
public net.minecraft.world.level.levelgen.feature.IcebergFeature m_66048_(Lnet/minecraft/world/level/LevelAccessor;Lnet/minecraft/core/BlockPos;)V # removeFloatingSnowLayer

# Used by TFCFishingHook, we need to override these methods rather than bastardize the entire fishing hook class
public net.minecraft.world.entity.projectile.FishingHook m_37136_(Lnet/minecraft/world/entity/player/Player;)Z # shouldStopFishing
public net.minecraft.world.entity.projectile.FishingHook m_37145_(Lnet/minecraft/core/BlockPos;)V # catchingFish
public net.minecraft.world.entity.projectile.FishingHook f_37094_ # hookedIn
public net.minecraft.world.entity.projectile.FishingHook m_150157_(Lnet/minecraft/world/entity/Entity;)V # setHookedEntity
public net.minecraft.world.entity.projectile.FishingHook f_37095_ # currentState
public net.minecraft.world.entity.projectile.FishingHook$FishHookState
